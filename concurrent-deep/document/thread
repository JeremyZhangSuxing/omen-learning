什么是线程中断
     *     java中的线程中断并不是指强制线程中断执行,而是指调用线程中断起到一个通知作用,让线程知道自己被中断了.
     *     至于线程是否应该继续执行下去,这个取决于业务代码本身.而原来提供的stop()方法,因为固有不安全性,现在已经不推荐使用该方式来实现线程中断.
线程池的两种队列的基本使用
     *
     *
LongAdder 高并发场景下线程安全的类
维护了base这个值
没有发生过竞争时，数据会累加到 base上 | 当cells扩容时，需要将数据写到base中
extends Striped64 这个类
static 内部类 Cell 维护一个value
高并发场景下实现统计数据
当前thread的hash值与上hash数组长度-1 得到的是肯定是cell 数组的一个桶位
扩容条件
具体就是当前cells的元素个数小于当前机器CPU个数并且当前多个线程访问了cells中同一个元素

concurrentHashMap
cas 操作 底层调用native方法   执行compx chg  指令

threadPool
     *  提交任务时 不推荐使用invokeAll方式 通常使用submit方式
     *  同步队列 LinkedBlockingQueue   SynchronizedQueue 选择
     *  cpu密集型操作和io密集型操作对coreSize设置要规范来确定发挥线程池最大性能
     *
     core线程获取任务的方式是take
     普通线程回去任务的方式是poll ?
     ArrayBlockingQueue  选取blocking 方式来获取元素，异步去消费，FIFO
